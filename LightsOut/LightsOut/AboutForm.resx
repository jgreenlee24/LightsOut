<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAW
        JQAAFiUBSVIk8AAABABJREFUWEfF0ltsmnUYx/Hd6kZtibVz3Wa2mm5qotuirM7ZROOcx8ROY+Z24YyH
        xC1x2aLxxmw12YUmc67L7OZaiW1adypdLVW6Si2UjdMKtMCgB94egFIoK9BCS8HCzz+9aAp9SrmiJJ9A
        vvzfh4cX1rAHVhkZs4mM2UTGbCLjiqKuHZjz7kYssBexyZcR879EnssAGZcVHizCfw8OIB46AYRPA7Pn
        mAvs9VnmO7bIHvK6NMhImukvxNzEEcSCX7EPOwNEhIyIETMNTBXr5eyOHCWvXwYZlwgaeYi638ec/wvE
        Z75hH3YJ8Ugz4lEFo2LkiM82Ih6+gFjoJKLeMnIOgYxJJrVrERrci2lnGcLezxCd+haRYDUiIQkiM2pG
        j8i0kjUxZqcqMRs4iWn3EYS5LeS8FGRMkljA1ytAYOhtTLk+RujBCYR8lQj5mxAKdDJqRoagT4TgxHkE
        vccQcByCz/Y6OS8FGZNMatbBY3oW3r5XMTH8Ifyuz+H3nGGE8HtvMWL4PCKmCj73aUw4P4GXK4PbUopg
        z0PkzEXIuGBcwodd9RQcXdswatyNsd434OYOYtz+Jcad3zMVTCU8jvPMKXhGPsXYwAcYteyDw7ALU/qH
        ybmLkHGBtyUPNlkxBu9sxZBmG0YML8Ju3g+buZx94wqMckfh5I6z5+NwDByC3VqGEeM+DOkE4JRF8z8f
        NXcRMibxyfiwSjejT74R/cpiDGieB6d/BVzPm+CM74LrvcSe34Gtez8GdKXoV+9Er2IrrB0bEFDxyJmL
        kDHJeNtjMIo3wdT6OMzSAtzveAIWxdOw3N0Fi0oAq7oEFuULuH9nB8yd22FqL4SxLR89fxeQ81KQMYlN
        tAX3bhZC17geuuZHof+LD0NrHgy31yPiOQzDP5uZjdC3FkAvyUOXOA/3mvjwyXPJeSnIuERiCWVdAVRX
        +VDfzIValAP1rRzMDO+Bumkde8008qBq4EF5PQd36/nzd46alYKMS2iq2O96/UlIr+RD/vsj6KzlsW9a
        jElbKfsvHIa8fi3ktUwNDzJhDpwtheQcAhlJil8E6K55Bi0VG9BamQ+laCe6JSUY0n+Ef6tz2XJ8jPy5
        CX03isjrl0HGZXVeLIHiogDa6udganwN3O23MKw9BnPd9vnlEneKui4NMqaVWCJBW/cejA0HYZF+vdCo
        8ysgY1qpCwyrTq3uAmNd5dldIEGvM8Dt8cBud6CjXYbqX4XkuQyQMS2rtQcN126gruYPOBxOmIxm/HZF
        iMuXq8jzKyBjWn0W0+oukNDcJIbLNQaNWouzP5xDh7Q9uwtcq7+6cAcS/weZVEqeywAZM9ImkaBWWIuf
        fvyZfD9DZMwmMmYTGbNkDf4HHe8NS+wUthAAAAAASUVORK5CYII=
</value>
  </data>
</root>